<input type="hidden" id="{{ form.vars.id }}" name="{{ form.vars.full_name }}"/>

{% set object = form.vars.sonata_admin.admin.subject %}
{% set mapping = object.taxonomyMapping %}
{% if object.isCategoriesFieldMapped %}
  <table class="table">
    <thead>
      <tr>
        <th class="original">Catégories lues depuis le fichier d'origine</th>
        <th style="width:20px"></th>
        <th>Catégories du site</th>
        <th style="width:20px"></th>
      </tr>
    </thead>
    <tbody class="table-striped">
      {% for originName, mappedName in mapping %}
        <tr>
          <td class="original">{{originName}}</td>
          <td>></td>
          <td class="mapped">
            <input type="text" name="taxonomy[{{originName}}][]" class="form-control category-selector" value="{{mappedName|join(',')}}"/>
          </td>
          <td><i class="clear-icon fa fa-ban" title="Ne pas utiliser cette catégorie"></i></td>
        </tr>
      {% endfor %}
    </tbody>

  </table>
{% else %}
  <div class="alert alert-info">Veuillez d'abords sélectionner le champs correspondant aux catégories dans l'onglet 'Table de correspondance des champs' puis cliquer sur 'Lire les données'</div>
{% endif %}

<style>
  .original { width: 30%; }
</style>
<script>
  jQuery(document).ready(function() {

    var taxonomy = {{ form.vars.attr["data-options"]|raw }};
    var formData = [{ id: "", text: ""}]

    function recursivelyAddOption(category, parentOption)
    {
      if (!category.options) return;
      for(var i = 0; i < category.options.length; i++)
      {
        var option = category.options[i];
        var optionName = parentOption ? parentOption + ' / ' : '';
        optionName += option.name;
        formData.push({id: option.id, text: optionName});
        if (option.subcategories)
        {
          for(var j = 0; j < option.subcategories.length; j++)
          {
            recursivelyAddOption(option.subcategories[j], optionName);
          }
        }
      }
    }
    for(var k = 0; k < taxonomy.length; k++) recursivelyAddOption(taxonomy[k], null);

    $(".category-selector").select2({
        data: formData,
        multiple: true
    });

    // on init, if the category selector is empty that mean that the old mapped category does not exist anymore
    $(".category-selector").each(function() {
      if (!$(this).val()) $(this).siblings('input').val('/');
    });

    $('.clear-icon').click(function() {
      $(this).parent().parent().find('.category-selector:not(.select2-container)').val("").trigger('change');
    });

  });
</script>